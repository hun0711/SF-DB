{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carax\\\\Desktop\\\\\\uC0AC\\uC774\\uB4DC \\uD504\\uB85C\\uC81D\\uD2B8\\\\SFDB-Project\\\\front\\\\src\\\\components\\\\Header.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@mui/material/Toolbar';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport SearchIcon from '@mui/icons-material/Search';\nimport InputBase from '@mui/material/InputBase';\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst headerPropTypes = {\n  sections: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired\n  })).isRequired,\n  title: PropTypes.string.isRequired\n};\nfunction Header(props) {\n  _s();\n  /***********************************************************************/\n  {/* 함수 정의 */}\n\n  // 검색어를 상태로 관리\n  const [searchQuery, setSearchQuery] = React.useState('');\n\n  // 검색 기능\n  const handleSearch = () => {\n    // 여기서 searchQuery를 이용하여 검색 기능을 수행\n    console.log('검색어:', searchQuery);\n  };\n\n  // InputBase의 onChange 이벤트로 검색어를 업데이트\n  const handleInputChange = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  /************************************************************************/\n\n  const {\n    sections\n  } = props;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        borderBottom: 1,\n        borderColor: 'divider'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          flex: 1,\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/SF-DB.png\",\n          alt: \"SF-DB \\uB85C\\uACE0\",\n          style: {\n            width: '200px',\n            height: '200px',\n            marginRight: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n          placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          value: searchQuery,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleSearch,\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      component: \"nav\",\n      variant: \"dense\",\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        overflowX: 'auto'\n      },\n      children: sections.map(section => /*#__PURE__*/_jsxDEV(Link, {\n        color: \"inherit\",\n        noWrap: true,\n        variant: \"body2\",\n        href: section.url,\n        sx: {\n          p: 1,\n          flexShrink: 0\n        },\n        children: section.title\n      }, section.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"uixqA8hxOTN7LqZPWxVzG2fnyhQ=\");\n_c = Header;\nHeader.propTypes = headerPropTypes;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","PropTypes","Toolbar","Button","IconButton","SearchIcon","InputBase","Box","Link","jsxDEV","_jsxDEV","headerPropTypes","sections","arrayOf","shape","title","string","isRequired","url","Header","props","_s","searchQuery","setSearchQuery","useState","handleSearch","console","log","handleInputChange","event","target","value","Fragment","children","sx","display","alignItems","justifyContent","borderBottom","borderColor","size","fileName","_jsxFileName","lineNumber","columnNumber","flex","src","alt","style","width","height","marginRight","placeholder","onChange","onClick","component","variant","overflowX","map","section","color","noWrap","href","p","flexShrink","_c","propTypes","$RefreshReg$"],"sources":["C:/Users/carax/Desktop/사이드 프로젝트/SFDB-Project/front/src/components/Header.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\n\r\nconst headerPropTypes = {\r\n  sections: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      url: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\nfunction Header(props) {\r\n/***********************************************************************/\r\n{/* 함수 정의 */}\r\n\r\n  // 검색어를 상태로 관리\r\n  const [searchQuery, setSearchQuery] = React.useState('');\r\n\r\n  // 검색 기능\r\n  const handleSearch = () => {\r\n    // 여기서 searchQuery를 이용하여 검색 기능을 수행\r\n    console.log('검색어:', searchQuery);\r\n  };\r\n\r\n  // InputBase의 onChange 이벤트로 검색어를 업데이트\r\n  const handleInputChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n\r\n/************************************************************************/\r\n\r\n  const { sections } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Toolbar\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          borderBottom: 1,\r\n          borderColor: 'divider',\r\n        }}\r\n      >\r\n        {/* Subscribe 버튼 */}\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <Button size=\"small\">Subscribe</Button>\r\n        </Box>\r\n\r\n        {/* 로고와 검색 바 */}\r\n        <Box sx={{ display: 'flex', alignItems: 'center', flex: 1, justifyContent: 'center' }}>\r\n          <img\r\n            src=\"/images/SF-DB.png\"\r\n            alt=\"SF-DB 로고\"\r\n            style={{ width: '200px', height: '200px', marginRight: '10px' }}\r\n          />\r\n          <InputBase\r\n            placeholder=\"검색어를 입력하세요\"\r\n            value={searchQuery}\r\n            onChange={handleInputChange}\r\n          />\r\n          <IconButton onClick={handleSearch}>\r\n            <SearchIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Toolbar>\r\n\r\n      <Toolbar\r\n        component=\"nav\"\r\n        variant=\"dense\"\r\n        sx={{ display: 'flex', justifyContent: 'center', overflowX: 'auto' }}\r\n      >\r\n        {sections.map((section) => (\r\n          <Link\r\n            color=\"inherit\"\r\n            noWrap\r\n            key={section.title}\r\n            variant=\"body2\"\r\n            href={section.url}\r\n            sx={{ p: 1, flexShrink: 0 }}\r\n          >\r\n            {section.title}\r\n          </Link>\r\n        ))}\r\n      </Toolbar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nHeader.propTypes = headerPropTypes;\r\nexport default Header;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}